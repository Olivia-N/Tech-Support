import java.util.Scanner;
public class Application {

	static final int MAX = 6;
	static BusinessAccount[] bAccounts = new BusinessAccount[MAX];
	static CustomerAccount[] cAccounts = new CustomerAccount[MAX];
	static Scanner input = new Scanner(System.in);
	static Account account = null;
	
	
	public static void main(String[] args) {

		
		populateBusiness();
		populateCustomer();
	
		
		System.out.println("~~~~~     Welcome to Renct     ~~~~~" + "\nMake and save money with renct, a one-stop-shop for all your professional and personal needs!");
		System.out.println("\nPlease make an account: ");
		String[] options = {"Customer", "Business"};
		Menu busiOrCust = new Menu ("Are you a customer or a business?", options );
		int choice = busiOrCust.getUserChoice();
		AccountType type = null;
		if (choice == 1) {												
			customerMainApp();
		}
		if (choice == 2) {
			businessMainApp();
		}
	} 
	
	public static void customerMainApp() {
		System.out.println("Please Enter Your Username: ");
		String userName = input.nextLine();
		System.out.println("Please Enter Your First Name: ");
		String firstName = input.nextLine();
		System.out.println("Please Enter Your Surname: ");
		String secondName = input.nextLine();
		System.out.println("Please Enter Your Email: ");
		String email = input.nextLine();
		System.out.println("Please Enter Your Location: (For testing sake please enter Belfast, Glasgow or London");
		String location = input.nextLine();
													
		CustomerAccount account = new CustomerAccount(userName, firstName, secondName, email, location);
		int options;
		String[] mainOptions = {"View Office Space", "View Equipment", "View Software", "View Specialist Equipment", "Leave Review", "Quit"};
		Menu main = new Menu("Main Menu: ", mainOptions);
		int quitOption = mainOptions.length;
		int choice;
		boolean done = false;
		
		do {
			choice = main.getUserChoice();
			if (choice == quitOption) {
				done = true;
			} else {
				processCustomerOption(choice, account);
			}
		} while (!done);
	
	}
	
	public static void businessMainApp() {
		System.out.println("Please Enter Your Username: ");
		String userName = input.nextLine();
		System.out.println("Please Enter Your First Name: ");
		String firstName = input.nextLine();
		System.out.println("Please Enter Your Surname: ");
		String secondName = input.nextLine();
		System.out.println("Please Enter Your Email: ");
		String email = input.nextLine();
		System.out.println("Please Enter Your Location: (For testing sake please enter Belfast, Glasgow or London");
		String location = input.nextLine();
		System.out.println("Please Enter Your Company");
		String company = input.nextLine();
		BusinessAccount account = new BusinessAccount(userName, firstName, secondName, email, location, company);
		bAccounts[0] = (BusinessAccount) account;
		
		String[] mainOptions = {"Add Office Space", "Add Equipment", "Add Software", "Add Specialist Equipment", "View Current Rentals", "Leave Review", "Quit"};
		Menu main = new Menu("Main Menu: ", mainOptions);
		
		int quitOption = mainOptions.length;
		int choice;
		boolean done = false;
		
		do {
			choice = main.getUserChoice();
			if (choice == quitOption) {
				done = true;
			} else {
				processBusinessChoice(choice, account);
			}
		} while (!done);
	
	}
	
	public static void processCustomerOption(int choice, CustomerAccount account) {
		switch(choice) {
		case 1:
			viewOfficeSpace(account);
			break;
		case 2:
			viewEquipment(account);		
			break;
		case 3:
			viewSoftware(account);
			break;
		case 4:
			viewSpec(account);	//Issue this triggers the next case

		case 5:
			leaveReview();
			break;
		}
	}
	
	public static void processBusinessChoice(int choice, BusinessAccount account) {
		switch(choice) {
		case 1:
			addOfficeSpace(account);
			break;
		case 2:
			addEquipment(account);
			break;
		case 3:
			addSoftware(account);
			break;
		case 4:
			addSpecEquip(account);
			break;
		case 5:
			viewOwned(account);

		case 6:
			leaveCustomerReview();
			break;
		}
	}
	
	
	
	private static void viewOwned(BusinessAccount account) {
		System.out.println(account.printAll());
	}



	private static void addSpecEquip(BusinessAccount account) {
		System.out.println("Please Enter Specialist Equipment: ");
		String spec = input.nextLine();
		System.out.println("Please Enter Price: ");
		double dub = input.nextDouble();
		account.AddSpec(spec, dub);
		
	}

	private static void addSoftware(BusinessAccount account) {
		System.out.println("Please Enter Software: ");
		String soft = input.nextLine();
		System.out.println("Please Enter Price: ");
		double dub = input.nextDouble();
		account.AddSpec(soft, dub);
		
	}

	private static void addEquipment(BusinessAccount account) {
		System.out.println("Please Enter Equipment: ");
		String equip = input.nextLine();
		System.out.println("Please Enter Price: ");
		double dub = input.nextDouble();
		account.AddSpec(equip, dub);
		
	}

	private static void addOfficeSpace(BusinessAccount account) {
		System.out.println("Please Enter Office Space: ");
		String space = input.nextLine();
		System.out.println("Please Enter Price: ");
		double dub = input.nextDouble();
		account.AddSpec(space, dub);
		
	}

	private static void viewSpec(CustomerAccount account) {
		String[] options = {"View all Specialist Equipment", "View Specialist Equipment in my location"};
		Menu equipment = new Menu("Please select an option: ", options);
		int choice = equipment.getUserChoice();
		switch(choice) {
		case 1:
			System.out.println("This will print all specialist equipment\n");
			for (int i = 0; i < MAX; i++) {
				System.out.println(bAccounts[i].printAllSpecEquipment());
			}
			break;
		case 2:
			System.out.println("This will print only specialist equipment near you\n");
			for (int i = 0; i < MAX; i++) {
				if (bAccounts[i].getLocation().equals(account.getLocation())) {
					System.out.println(bAccounts[i].printAllSpecEquipment());
				}
			}
		}
		
	}

	private static void viewOfficeSpace(CustomerAccount account) {
		String[] options = {"View all offices", "View offices in my location"};
		Menu officeSpace = new Menu("Please select an option: ", options);
		int choice = officeSpace.getUserChoice();
		switch(choice) {
		case 1:
			System.out.println("This will print all locations\n");
			for (int i = 0; i < MAX; i++) {
				System.out.println(bAccounts[i].printAllOffices());
			}
			break;
		case 2:
			System.out.println("This will print only offices near you\n");
			for (int i = 0; i < MAX; i++) {
				if (bAccounts[i].getLocation().equals(account.getLocation())) {
					System.out.println(bAccounts[i].printAllOffices());
				}
			}
		}
	}
	
	private static void viewEquipment(CustomerAccount acount) {
		String[] options = {"View all Equipment", "View Equipment in my location"};
		Menu equipment = new Menu("Please select an option: ", options);
		int choice = equipment.getUserChoice();
		switch(choice) {
		case 1:
			System.out.println("This will print all equipment\n");
			for (int i = 0; i < MAX; i++) {
				System.out.println(bAccounts[i].printAllEquipment());
			}
			break;
		case 2:
			System.out.println("This will print only equipment near you\n");
			for (int i = 0; i < MAX; i++) {
				if (bAccounts[i].getLocation().equals(account.getLocation())) {
					System.out.println(bAccounts[i].printAllEquipment());
				}
			}
		}
	}
	
	private static void viewSoftware(CustomerAccount account) {
		System.out.println("View Software\n");
		for (int i = 0; i < MAX; i++) {
			System.out.println(bAccounts[i].printAllSoftware());
		}
	}
	
	private static void changeProfileInformation() {
		System.out.println("\n");
		System.out.println("Current Profile:\n");
		account.print();
		System.out.println("\n");
		String[] changeProfileOptions = {"Change Username", "Change First Name", "Change Last Name", "Change Location"};
		Menu changeProfile = new Menu("Change Profile Information", changeProfileOptions);
		int choice = changeProfile.getUserChoice();
		switch(choice) {
		case 1:
			System.out.println("Please enter new username: ");
			String userName = input.nextLine();
			account.setUserName(userName);
			break;
		case 2: 
			System.out.println("Please enter new first name: ");
			String firstName = input.nextLine();
			account.setFirstName(firstName);
			break;
		case 3: 
			System.out.println("Please enter new last name: ");
			String lastName = input.nextLine();
			account.setLastName(lastName);
			break;
		case 4:
			System.out.println("Please enter new location: ");
			String location = input.nextLine();
			account.setLocation(location);
			break;
		}
	}
	
	private static void leaveReview() {
		System.out.println("Leave Review");
		System.out.println("Please Enter The Company Name:	-For testing sake please enter BigCompany");
		String company = input.nextLine();
		System.out.println("Please Enter Your Review: ");
		String review = input.nextLine();
		boolean found = false;
		for (int i = 0; i < MAX; i++) {
			if (bAccounts[i].getCompany().equals(company)) {
				bAccounts[i].AddReview(review);
				System.out.println("Review Successfully Added");
				found = true;
			}
		}
		if (!found) {
			System.out.println("There is no company by that name in this system");
		}
	}
	
	private static void leaveCustomerReview() {
		System.out.println("Leave Review");
		System.out.println("Please Enter The Customer's UserName:	-For testing sake please enter Athena");
		String userName = input.nextLine();
		System.out.println("Please Enter Your Review: ");
		String review = input.nextLine();
		boolean found = false;
		for (int i = 0; i < MAX; i++) {
			if (cAccounts[i].getUserName().equals(userName)) {
				cAccounts[i].AddReview(review);
				System.out.println("Review Successfully Added");
				found = true;
			}
		}
		if (!found) {
			System.out.println("There is no user by that name in this system");
		}
	}
	
	private static void populateCustomer() {
		CustomerAccount c1 = new CustomerAccount("Athena", "Athena" , "Hackathon", "address@a.com", "Belfast");
		CustomerAccount c2 = new CustomerAccount("CatDog", "Cat", "Dog", "address@a.com", "Belfast");
		CustomerAccount c3 = new CustomerAccount("user", "User", "Name", "address@a.com", "Belfast");
		CustomerAccount c4 = new CustomerAccount("Cushion", "Sofa", "Pillow", "address@a.com", "Belfast");
		CustomerAccount c5 = new CustomerAccount("Customer5", "Java", "Script", "address@a.com", "Belfast");
		CustomerAccount c6 = new CustomerAccount("Customer6", "Java", "Language", "address@a.com", "Belfast");
		
		cAccounts[0] = c1;
		cAccounts[1] = c2;
		cAccounts[2] = c3;
		cAccounts[3] = c4;
		cAccounts[4] = c5;
		cAccounts[5] = c6;
	}
	
	private static void populateBusiness() {
		BusinessAccount a1 = new BusinessAccount("WeirdAlbert", "Albert", "Yakovitsky", "address@a.com", "Belfast", "BigCompany");
		a1.AddOffice("1 Silly Street", 1000.0);
		a1.AddEquip("MicroHard Laptop", 20.0);
		a1.AddSoft("NotPhotoShop", 5);
		a1.AddSpec("3d Printer", 200);
		BusinessAccount a2 = new BusinessAccount("LadyGooGoo", "Miss", "Googoo", "address@a.com", "Belfast", "WeeCompany");
		a2.AddOffice("2 Silly Street" , 1000.0);
		a2.AddEquip("MicroHard Laptop", 20);
		a2.AddSoft("NotPhotoShop", 5);
		a2.AddSpec("3d Printer", 200);

		BusinessAccount a3 = new BusinessAccount("JustoutBeaver", "Justout", "Beaver", "address@a.com", "London", "MediumCompany");
		a3.AddOffice("3 Silly Street", 1000);
		a3.AddEquip("MicroHard Laptop", 20);
		a3.AddSoft("NotPhotoShop", 5);
		a3.AddSpec("3d Printer", 200);

		BusinessAccount a4 = new BusinessAccount("Marinara", "Marinara", "Diamond", "address@a.com", "London", "WeeMediumCompany");
		a4.AddOffice("4 Silly Street", 1000);
		a4.AddEquip("MicroHard Laptop", 20);
		a4.AddSoft("NotPhotoShop", 5);
		a4.AddSpec("3d Printer", 200);

		BusinessAccount a5 = new BusinessAccount("BabDylo", "Bab", "Dylo", "address@a.com", "Glasgow", "MediumBigCompany");
		a5.AddOffice("5 Silly Street", 1000);
		a5.AddEquip("MicroHard Laptop", 20);
		a5.AddSoft("NotPhotoShop", 5);	
		a5.AddSpec("3d Printer", 200);

		BusinessAccount a6 = new BusinessAccount("SandRabbit", "Sand", "Rabbit", "address@a.com", "Glasgow", "WeeBigCompany");
		a6.AddOffice("6 Silly Street", 1000);
		a6.AddEquip("MicroHard Laptop", 20);
		a6.AddSoft("NotPhotoShop", 5);
		a6.AddSpec("3d Printer", 200);

		
		bAccounts[0] = a1;
		bAccounts[1] = a2;
		bAccounts[2] = a3;
		bAccounts[3] = a4;
		bAccounts[4] = a5;
		bAccounts[5] = a6;
	}

}
